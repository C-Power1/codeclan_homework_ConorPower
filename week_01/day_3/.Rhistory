above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent_beer <- subset(beer, beer$percent = = max(beer$percent))
#Brands that have a higher than average carbohydrates
above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent_beer <- subset(beer, beer$percent = max(beer$percent))
#Brands that have a higher than average carbohydrates
above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent_beer <- subset(beer, beer$percent(max(beer$percent)))
#Brands that have a higher than average carbohydrates
above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent_beer <- subset(beer[1], max(beer$percent))
#Brands that have a higher than average carbohydrates
above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent_beer <- subset(beer, max(beer$percent))
#Brands that have a higher than average carbohydrates
above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
above_av_carb_brands
#Beer with highest percentage of alcohol
#high_percent_beer <- subset(beer, max(beer$percent))
max(beer$percent)
#Brands that have a higher than average carbohydrates
above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent_beer <- subset(beer, beer$percent = max(beer$percent)
#Brands that have a higher than average carbohydrates
above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent_beer <- subset(beer, beer$percent == max(beer$percent)
#Brands that have a higher than average carbohydrates
above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent_beer <- subset(beer, beer$percent == max(beer$percent))
#Brands that have a higher than average carbohydrates
above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent <- max(beer$percent)
high_percent_beer <- subset(beer, beer$percent == max(beer$percent))
#Brands that have a higher than average carbohydrates
above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent <- max(beer$percent)
#high_percent_beer <- subset(beer, beer$percent == max(beer$percent))
#Brands that have a higher than average carbohydrates
#above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
#above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent <- max(beer$percent)
#high_percent_beer <- subset(beer, beer$percent == max(beer$percent))
#Brands that have a higher than average carbohydrates
#above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
#above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent <- max(beer$percent)
#high_percent_beer <- subset(beer, beer$percent == max(beer$percent))
high_percent
#Brands that have a higher than average carbohydrates
#above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
#above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent <- max(beer$percent)
high_percent_beer <- subset(beer, beer$percent == high_percent)
#Brands that have a higher than average carbohydrates
#above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
#above_av_carb_brands
#Beer with highest percentage of alcohol
high_percent <- max(beer$percent)
high_percent_beer <- subset(beer, beer$percent == high_percent)
high_percent_beer
#Brands that have a higher than average carbohydrates
#above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
#above_av_carb_brands
#Beer with highest percentage of alcohol is Flying Dog Double Dog\xca as below
high_percent <- max(beer$percent)
high_percent_beer <- subset(beer, beer$percent == high_percent)
#beer with highest calories
calories_as_num
#Brands that have a higher than average carbohydrates
#above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
#above_av_carb_brands
#Beer with highest percentage of alcohol is Flying Dog Double Dog\xca as below
high_percent <- max(beer$percent)
high_percent_beer <- subset(beer, beer$percent == high_percent)
#beer with highest calories
high_cal <- max(calories_as_num)
#Brands that have a higher than average carbohydrates
#above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
#above_av_carb_brands
#Beer with highest percentage of alcohol is Flying Dog Double Dog\xca as below
high_percent <- max(beer$percent)
high_percent_beer <- subset(beer, beer$percent == high_percent)
#beer with highest calories
high_cal <- max(calories_as_num)
high_cal
#Brands that have a higher than average carbohydrates
#above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
#above_av_carb_brands
#Beer with highest percentage of alcohol is Flying Dog Double Dog\xca as below
high_percent <- max(beer$percent)
highest_percent_beer <- subset(beer, beer$percent == high_percent)
#beer with highest calories
high_cal <- max(calories_as_num)
high_cal
highest_cal_beer
#Brands that have a higher than average carbohydrates
#above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
#above_av_carb_brands
#Beer with highest percentage of alcohol is Flying Dog Double Dog\xca as below
high_percent <- max(beer$percent)
highest_percent_beer <- subset(beer, beer$percent == high_percent)
#beer with highest calories
high_cal <- max(calories_as_num)
high_cal
#Brands that have a higher than average carbohydrates
#above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
#above_av_carb_brands
#Beer with highest percentage of alcohol is Flying Dog Double Dog\xca as below
high_percent <- max(beer$percent)
highest_percent_beer <- subset(beer, beer$percent == high_percent)
highest_percent_beer
#beer with highest calories
high_cal <- max(calories_as_num)
high_cal
#Brands that have a higher than average carbohydrates
above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
above_av_carb_brands
below_av_carb_brands <- subset(beer, beer$carbohydrates < mean(beer$carbohydrates))
#Beer with highest percentage of alcohol is Flying Dog Double Dog\xca as below
high_percent <- max(beer$percent)
highest_percent_beer <- subset(beer, beer$percent == high_percent)
highest_percent_beer
#Brands that have a higher than average carbohydrates
above_av_carb_brands <- subset(beer, beer$carbohydrates > mean(beer$carbohydrates))
above_av_carb_brands
below_av_carb_brands <- subset(beer, beer$carbohydrates < mean(beer$carbohydrates))
below_av_carb_brands
#Beer with highest percentage of alcohol is Flying Dog Double Dog\xca as below
high_percent <- max(beer$percent)
highest_percent_beer <- subset(beer, beer$percent == high_percent)
highest_percent_beer
?beer
#Data Frame structure
str(temp)
# Summary of Beer - displaying variable types of the dataframe and other info: numberical (percent, carbohydrates); character (brand, calories, brewery)
summary(temp)
#Ways of viewing dataframe as a whole
matrix(temp)
View(temp)
rowMeans(temp)
colMeans(temp)
rowMeans(temp$JAN)
?beer
#Data Frame structure
#str(temp)
# Summary of Temp - displaying variable of the matrix and other info
summary(temp)
#Ways of viewing dataframe as a whole
#matrix(temp)
#View(temp)
temp[1]
?beer
#Data Frame structure
#str(temp)
# Summary of Temp - displaying variable of the matrix and other info
#summary(temp)
#Ways of viewing dataframe as a whole
#matrix(temp)
View(temp)
colMeans()
months_of_year <- colnames(temp)
months_of_year <- colnames(temp)
months_of_year
months_of_year <- colnames(temp)
the_year <- colrows(temp)
months_of_year <- colnames(temp)
the_year <- rownames(temp)
months_of_year <- colnames(temp)
the_year <- rownames(temp)
the_year
?temp
#Data Frame structure
#str(temp)
# Summary of Temp - displaying variable of the matrix and other info
#summary(temp)
#Ways of viewing dataframe as a whole
#matrix(temp)
#View(temp)
months_of_year <- colnames(temp)
months_of_year[2]
months_of_year <- colnames(temp)
months_of_year[1]
months_of_year <- colnames(temp)
months_of_year[1]
mean_jan_temp <- subset(temp, months_of_year)
months_of_year <- colnames(temp)
months_of_year[1]
jan_temps <- subset(temp, months_of_year[1])
months_of_year <- colnames(temp)
months_of_year[1]
jan_temps <- temp[1, ]
months_of_year <- colnames(temp)
months_of_year[1]
jan_temps <- temp[1, 1]
months_of_year <- colnames(temp)
months_of_year[1]
jan_temps <- temp[1, 1]
months_of_year <- colnames(temp)
months_of_year[1]
jan_temps <- temp[1, 1, 1]
months_of_year <- colnames(temp)
months_of_year[1]
jan_temps <- temp[, 1]
months_of_year <- colnames(temp)
months_of_year[1]
jan_temps <- temp[, 1]
months_of_year <- colnames(temp)
months_of_year[1]
temp[, 1]
months_of_year <- colnames(temp)
months_of_year[1]
mean(temp[, 1])
months_of_year <- colnames(temp)
months_of_year[1]
jan_temp_mean <- mean(temp[, 1])
months_of_year <- colnames(temp)
months_of_year[1]
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
?apply
months_of_year <- colnames(temp)
months_of_year[1]
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
?apply
apply(max(temp[, 1]))
months_of_year <- colnames(temp)
months_of_year[1]
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
?apply
apply(temp[, 1], 1, max)
months_of_year <- colnames(temp)
months_of_year[1]
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
?apply
apply(temp[, 1], 3, max)
months_of_year <- colnames(temp)
months_of_year[1]
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
?apply
apply(temp[, 1], 3, max))
months_of_year <- colnames(temp)
months_of_year[1]
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
?apply
apply(temp, 2, max)
months_of_year <- colnames(temp)
months_of_year[1]
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
apply(temp, 2, max)
apply(temp, 2, mean)
months_of_year <- colnames(temp)
months_of_year[1]
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
max_temp_each_month <- apply(temp, 2, max)
#Average Temperature for each month
apply(temp, 2, mean)
months_of_year <- colnames(temp)
months_of_year[1]
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
max_temp_each_month <- apply(temp, 2, max)
#Average Temperature for each month
average_temp_each_month <- apply(temp, 2, mean)
months_of_year <- colnames(temp)
months_of_year
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
max_temp_each_month <- apply(temp, 2, max)
mean(max_temp_each_month)
#Average Temperature for each month
average_temp_each_month <- apply(temp, 2, mean)
months_of_year <- colnames(temp)
months_of_year
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
max_temp_each_month <- apply(temp, 2, max)
#Average max temperture for each month below:
max_av_temp_each_month <- mean(max_temp_each_month)
#Average Temperature for each month
average_temp_each_month <- apply(temp, 2, mean)
months_of_year <- colnames(temp)
months_of_year
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
max_temp_each_month <- apply(temp, 2, max)
max_temp_each_month
#Average max temperture for each month below:
max_av_temp_each_month <- mean(max_temp_each_month)
#Average Temperature for each month
average_temp_each_month <- apply(temp, 2, mean)
months_of_year <- colnames(temp)
#months_of_year
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
max_temp_each_month <- apply(temp, 2, max)
max_temp_each_month
#Average max temperture for each month below:
max_av_temp_each_month <- mean(max_temp_each_month)
#Average Temperature for each month
average_temp_each_month <- apply(temp, 2, mean)
months_of_year <- colnames(temp)
#months_of_year
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
max_temp_each_month <- apply(temp, 2, max)
high_max_temp_each_month <- max(max_temp_each_month)
#Average max temperture for each month below:
max_av_temp_each_month <- mean(max_temp_each_month)
#Average Temperature for each month
average_temp_each_month <- apply(temp, 2, mean)
months_of_year <- colnames(temp)
#months_of_year
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
max_temp_each_month <- apply(temp, 2, max)
high_max_temp_each_month <- max(max_temp_each_month)
high_max_temp_each_month
#Average max temperture for each month below:
max_av_temp_each_month <- mean(max_temp_each_month)
#Average Temperature for each month
average_temp_each_month <- apply(temp, 2, mean)
months_of_year <- colnames(temp)
months_of_year
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
max_temp_each_month <- apply(temp, 2, max)
high_max_temp_each_month <- max(max_temp_each_month)
#Average max temperture for each month below:
max_av_temp_each_month <- mean(max_temp_each_month)
#Average Temperature for each month
average_temp_each_month <- apply(temp, 2, mean)
apply(temp[3], 2, mean)
months_of_year <- colnames(temp)
#months_of_year
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
max_temp_each_month <- apply(temp, 2, max)
high_max_temp_each_month <- max(max_temp_each_month)
#Average max temperture for each month below:
max_av_temp_each_month <- mean(max_temp_each_month)
#Average Temperature for each month
average_temp_each_month <- apply(temp, 2, mean)
average_temp_each_month
months_of_year <- colnames(temp)
#months_of_year
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
max_temp_each_month <- apply(temp, 2, max)
high_max_temp_each_month <- max(max_temp_each_month)
#Average max temperture for each month below:
max_av_temp_each_month <- mean(max_temp_each_month)
#Average Temperature for each month
average_temp_each_month <- apply(temp, 2, mean)
average_temp_each_month[3]
months_of_year <- colnames(temp)
#months_of_year
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
max_temp_each_month <- apply(temp, 2, max)
high_max_temp_each_month <- max(max_temp_each_month)
#Average max temperture for each month below:
max_av_temp_each_month <- mean(max_temp_each_month)
#Average Temperature for each month
average_temp_each_month <- apply(temp, 2, mean)
rownames(temp)
months_of_year <- colnames(temp)
#months_of_year
#The mean temp of all the temperatures in January 1910 - 2015
jan_temp_mean <- mean(temp[, 1])
#I wanted  to find the max temparture of all the months 1910 - 2015. After googling and using ?help. I found the apply function and was able to return what I wanted, as below
?apply
max_temp_each_month <- apply(temp, 2, max)
high_max_temp_each_month <- max(max_temp_each_month)
#Average max temperture for each month below:
max_av_temp_each_month <- mean(max_temp_each_month)
#Average Temperature for each month
average_temp_each_month <- apply(temp, 2, mean)
nrow(temp)
View(game_of_thrones)
summary(game_of_thrones)
summary(game_of_thrones)
list(game_of_thrones)
#Summary allowed me to find that there was 434 characters in the Game of Thrones list
#summary(game_of_thrones)
list(game_of_thrones)
#Summary allowed me to find that there was 434 characters in the Game of Thrones list
#summary(game_of_thrones)
list(game_of_thrones)
game_of_thrones$characters
#Summary() and list() allowed me to see that there was 434 characters in the Game of Thrones list
#summary(game_of_thrones)
#list(game_of_thrones)
game_of_thrones$characters
#Summary() and list() allowed me to see that there was 434 characters in the Game of Thrones list
#summary(game_of_thrones)
#list(game_of_thrones)
game_of_thrones$characters
#Summary() and list() allowed me to see that there was 434 characters in the Game of Thrones list
#summary(game_of_thrones)
#list(game_of_thrones)
game_of_thrones$characters
#Summary() and list() allowed me to see that there was 434 characters in the Game of Thrones list
#summary(game_of_thrones)
#list(game_of_thrones)
got_chara <- game_of_thrones$characters
#Summary() and list() allowed me to see that there was 434 characters in the Game of Thrones list
#summary(game_of_thrones)
#list(game_of_thrones)
got_chara <- game_of_thrones$characters
got_chara
#Summary() and list() allowed me to see that there was 434 characters in the Game of Thrones list
#summary(game_of_thrones)
#list(game_of_thrones)
got_chara <- game_of_thrones$characters
length(got_chara)
#Summary() and list() allowed me to see that there was 434 characters in the Game of Thrones list
summary(game_of_thrones)
list(game_of_thrones)
#Summary() and list() allowed me to see that there was 434 characters in the Game of Thrones list as well as the below:
got_chara <- game_of_thrones$characters
length(got_chara)
got_chara[5]
#summary(game_of_thrones)
#list(game_of_thrones)
#Summary() and list() allowed me to see that there was 434 characters in the Game of Thrones list as well as the below:
#got_chara <- game_of_thrones$characters
#length(got_chara)
got_chara[5]
#summary(game_of_thrones)
#list(game_of_thrones)
#Summary() and list() allowed me to see that there was 434 characters in the Game of Thrones list as well as the below:
#got_chara <- game_of_thrones$characters
#length(got_chara)
got_chara
#summary(game_of_thrones)
#list(game_of_thrones)
#Summary() and list() allowed me to see that there was 434 characters in the Game of Thrones list as well as the below:
#got_chara <- game_of_thrones$characters
#length(got_chara)
view(got_chara)
#summary(game_of_thrones)
#list(game_of_thrones)
#Summary() and list() allowed me to see that there was 434 characters in the Game of Thrones list as well as the below:
#got_chara <- game_of_thrones$characters
#length(got_chara)
View(got_chara)
#summary(game_of_thrones)
#list(game_of_thrones)
#Summary() and list() allowed me to see that there was 434 characters in the Game of Thrones list as well as the below:
#got_chara <- game_of_thrones$characters
#length(got_chara)
View(game_of_thrones$characters)
?game_of_thrones
styler:::style_selection()
styler:::set_style_transformers()
styler:::set_style_transformers()
styler:::set_style_transformers()
