library(RPostgreSQL)
home_location <- Sys.getenv("HOME")
credentials_location <- paste0(home_location,"/credentials.R")
source(credentials_location)
db_connect <- dbConnect(drv = PostgreSQL(), user = postgresql_username, password = postgresql_password, dbname = "acme_employees", host = "localhost")
rm(postgresql_username, postgresql_password)
db_connect <- dbConnect(drv = PostgreSQL(), user = postgresql_username, password = postgresql_password, dbname = "acme_employees", host = "localhost")
library(RPostgreSQL)
home_location <- Sys.getenv("HOME")
credentials_location <- paste0(home_location,"/credentials.R")
source(credentials_location)
db_connect <- dbConnect(drv = PostgreSQL(), user = postgresql_username, password = postgresql_password, dbname = "acme_employees", host = "localhost")
rm(postgresql_username, postgresql_password)
dbListTables(db_connect)
?data.frame
data.frame(db_connect)
dbListTables(db_connect)
dbListFields(employees)
dbListFields(conn = db_connect, employees)
dbListFields(conn = db_connect, "employees")
dbListObjects(conn = db_connect)
dbGetQuery(conn = db_connect)
dbDisconnect(db_connect)
library(RPostgreSQL)
home_location <- Sys.getenv("HOME")
credentials_location <- paste0(home_location,"/credentials.R")
source(credentials_location)
db_connect <- dbConnect(drv = PostgreSQL(), user = postgresql_username, password = postgresql_password, dbname = "acme_employees", host = "localhost")
rm(postgresql_username, postgresql_password)
dbDisconnect(db_connect)
library(RPostgreSQL)
home_location <- Sys.getenv("HOME")
credentials_location <- paste0(home_location,"/credentials.R")
source(credentials_location)
db_connect <- dbConnect(drv = PostgreSQL(), user = postgresql_username, password = postgresql_password, dbname = "acme_employees", host = "localhost")
rm(postgresql_username, postgresql_password)
dbDisconnect(db_connect)
library(RPostgreSQL)
home_location <- Sys.getenv("HOME")
credentials_location <- paste0(home_location,"/credentials.R")
source(credentials_location)
db_connect <- dbConnect(drv = PostgreSQL(), user = postgresql_username, password = postgresql_password, dbname = "acme_employees", host = "localhost")
rm(postgresql_username, postgresql_password)
dbDisconnect(db_connect)
library(RPostgreSQL)
home_location <- Sys.getenv("HOME")
credentials_location <- paste0(home_location,"/credentials.R")
source(credentials_location)
db_connect <- dbConnect(drv = PostgreSQL(), user = postgresql_username, password = postgresql_password, dbname = "acme_employees", host = "localhost")
rm(postgresql_username, postgresql_password)
dbDisconnect(db_connect)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
library(CodeClanData)
all_deaths
dim(all_deaths)
dim(all_deaths) # check how many row and columns
nrow(all_deaths)
dim(all_deaths) # check how many row and columns
colnames(all_deaths)
dim(all_deaths) # check how many row and columns
colnames(all_deaths) # checking the names of the columns
dim(all_deaths) # check how many row and columns
names(all_deaths) # checking the names of the columns
dim(all_deaths) # check how many row and columns
names(all_deaths) # checking the names of the columns
head(all_deaths, 3)
dim(all_deaths) # check how many row and columns
names(all_deaths) # checking the names of the columns
head(all_deaths)
dim(all_deaths) # check how many row and columns
names(all_deaths) # checking the names of the columns
head(all_deaths) # print first few rows
tail(all_deaths) # print last few rows
dim(all_deaths) # check how many row and columns
names(all_deaths) # checking the names of the columns
head(all_deaths) # print first few rows
tail(all_deaths) # print last few rows
glimpse(all_deaths)
dim(all_deaths) # check how many row and columns
names(all_deaths) # checking the names of the columns
head(all_deaths) # print first few rows
tail(all_deaths) # print last few rows
glimpse(all_deaths) #gives overview of data
view(all_deaths) # view your data
deaths <- select(all_deaths, name, allegiances, year_of_death)
deaths <- select(all_deaths, name, allegiances, year_of_death)
deaths
# Selecting columns
deaths <- select(all_deaths, name, allegiances, year_of_death)
deaths
# alll columns apart from name and year columns
select(all_deaths, -name, -year_of_death)
books <- select(all_deaths, starts_with("book"))
books <- select(all_deaths, starts_with("book"))
books
all_deaths
lannisters <- filter(all_deaths, allengiences == "lannister")
lannisters <- filter(all_deaths, allengiances == "lannister")
all_deaths
lannisters <- filter(all_deaths, allegiances == "lannister")
lannisters <- filter(all_deaths, allegiances == "lannister")
lannisters <- filter(all_deaths, allegiances == "lannister")
lannisters
lannisters <- filter(all_deaths, allegiances == "Lannister")
lannisters
lannisters <- filter(all_deaths, allegiances == "Lannister")
lannisters
lannisters1 <- filter(all_deaths, allegiances %in% c("Lannister", "House Lannister"))
lannisters1
males <- filter(all_deaths, allegiances == "None", gender == 0)
males <- filter(all_deaths, allegiances == "None", gender == 0)
males
year_of_death_equal_or_less_than_299 <- filter(all_deaths, year_of_death =< 299)
year_of_death_equal_or_less_than_299 <- filter(all_deaths, year_of_death <= 299)
year_of_death_equal_or_less_than_299 <- filter(all_deaths, year_of_death <= 299)
year_of_death_equal_or_less_than_299
females <- filter(all_deaths, gender == 1)
females
females <- filter(all_deaths, gender == 2)
females
females <- filter(all_deaths, gender == 0)
females
males <- filter(all_deaths, allegiances == "None", gender == 0)
males
males <- filter(all_deaths, allegiances == "None", gender == 1)
males
females <- filter(all_deaths, allegiances != "Lannister" gender == 0)
females <- filter(all_deaths, allegiances != "Lannister", gender == 0)
females
females <- filter(all_deaths, allegiances != "Lannister", gender == 0)
females
females <- filter(all_deaths, !allegiances %in% c("Lannister", "House Lannister") , gender == 0)
females
females_not_lannister <- filter(all_deaths, !allegiances %in% c("Lannister", "House Lannister") , gender == 0)
females_not_lannister
arrange(all_deaths, gender)
arrange(all_deaths, nobility)
#ascending is default
arrange(all_deaths, nobility)
# Descending
arrange(all_deaths, desc(book_intro_chapter))
#ascending is default
deaths_arranged_by_nobility <- arrange(all_deaths, nobility)
# Descending
arrange(all_deaths, desc(book_intro_chapter))
#year_survived is new column
deaths_years <- mutate(all_deaths,
year_surived = year_of_death - 298)
#year_survived is new column
deaths_years <- mutate(all_deaths,
year_surived = year_of_death - 298)
deaths_years
#year_survived is new column
deaths_years <- mutate(all_deaths,
year_survived = year_of_death - 298)
deaths_years
books <- select(all_deaths, starts_with("book"))
books
char_books <- mutate_all(books, as.character)
char_books
#how many people died in each family
deaths_grouped <- group_by(all_deaths, allegiances)
#how many people died in each family
deaths_grouped <- group_by(all_deaths, allegiances)
deaths_summarised<- summarise(deaths_grouped,
number_of_deaths = n ())
#how many people died in each family
deaths_grouped <- group_by(all_deaths, allegiances)
deaths_summarised <- summarise(deaths_grouped,
number_of_deaths = n ())
deaths_summarised
#how many people died in each family
# summarise usually means you have to group first, n() is a function that counts the group, number_of_deaths is new column
deaths_grouped <- group_by(all_deaths, allegiances)
deaths_summarised <- summarise(deaths_grouped,
number_of_deaths = n())
deaths_summarised
# %>% - pipe operator - means AND THEN
death_pipe <- all_deaths %>%
select(name, allegiances, gender, nobility, year_of_death) %>%
mutate(year_survived = year_of_death - 298) %>%
group_by(allegiances) %>%
summarise(character_count = n()) %>%
arrange(desc(character_count))
# %>% - pipe operator - means AND THEN
death_pipe <- all_deaths %>%
select(name, allegiances, gender, nobility, year_of_death) %>%
mutate(year_survived = year_of_death - 298) %>%
group_by(allegiances) %>%
summarise(character_count = n()) %>%
arrange(desc(character_count))
death_pipe
all_deaths
percent <-   select(name, allegiances, nobility) %>%
mutate(noble_characters = nobility == 1) %>%
group_by(group_by(allegiances) %>%
summarise(noble_characters = n()) * 100
percent <-   select(name, allegiances, nobility) %>%
mutate(noble_characters = nobility == 1) %>%
group_by(group_by(allegiances) %>%
summarise(noble_characters = n()) * 100)
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(noble_characters = nobility == 1) %>%
group_by(group_by(allegiances) %>%
summarise(noble_characters = n()) * 100)
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(noble_characters = nobility == 1) %>%
group_by(group_by(allegiances) %>%
summarise(noble_characters_percent = n()) * 100)
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(noble_characters = nobility == 1) %>%
group_by(group_by(allegiances) %>%
summarise(noble_characters_percent = n()) * 100)
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(noble_characters = nobility == 1) %>%
group_by(group_by(allegiances) %>%
summarise(noble_characters_percent = noble_characters * 100)
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(noble_characters = nobility == 1 ) %>%
group_by(allegiances) %>%
summarise(noble_characters_percent = noble_characters * 100)
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(noble_characters = nobility == 1 ) %>%
group_by(allegiances) %>%
summarise(noble_characters_percent = noble_characters * 100)
percent
# %>% - pipe operator - means AND THEN
# it does all the things we did before but in one go
death_pipe <- all_deaths %>%
select(name, allegiances, gender, nobility, year_of_death) %>%
mutate(year_survived = year_of_death - 298) %>%
group_by(allegiances) %>%
summarise(character_count = n()) %>%
arrange(desc(character_count))
death_pipe
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(noble_characters = nobility == 1 ) %>%
group_by(name) %>%
summarise(noble_characters_percent = noble_characters * 100)
percent
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(percent = nobility * 100 ) %>%
group_by(allegiances) %>%
percent
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(percent = nobility * 100 ) %>%
group_by(allegiances) %>%
percent
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(percent = nobility * 100 ) %>%
group_by(allegiances) %>%
summarise(percent)
percent
percent <- all_deaths %>%
select(allegiances, nobility) %>%
mutate(percent = nobility * 100 ) %>%
group_by(allegiances) %>%
summarise(percent)
percent
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(percent = nobility * 100 ) %>%
group_by(allegiances) %>%
summarise(percent = sum(nobility)/n())
percent
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(percent = nobility * 100 ) %>%
group_by(allegiances) %>%
summarise(percent)
percent
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(percent = nobility * 100 ) %>%
group_by(allegiances) %>%
summarise(percent = n())
percent
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(percent = nobility * 100 ) %>%
group_by(allegiances) %>%
summarise(percent = n() * 100)
percent
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(percent = nobility * 100 ) %>%
group_by(allegiances) %>%
summarise(percent = n())
percent
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(percent = nobility * 100 ) %>%
group_by(allegiances) %>%
summarise(percent = noblitiy / sum(nobility)
percent
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(percent = nobility * 100 ) %>%
group_by(allegiances) %>%
summarise(percent = noblitiy / sum(nobility))
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(percent = nobility * 100 ) %>%
group_by(allegiances) %>%
summarise(percent = nobility / sum(nobility))
percent
percent <- all_deaths %>%
select(name, allegiances, nobility) %>%
mutate(percent = nobility * 100 ) %>%
group_by(allegiances) %>%
summarise(percent = nobility / sum(nobility) * 100)
percent
all_deaths %>%
filter(nobility==1) %>%
group_by(allegiances) %>%
summarise(noble_count = n()) %>%
mutate(percent = noble_count / sum(noble_count)*100 ) %>%
arrange(desc(percent))
